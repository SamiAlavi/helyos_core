{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "format": [
              "camelCase"
            ],
            "prefix": [
              "_"
            ],
            "filter": {
              "regex": "^_",
              "match": true
            }
          },
          {
            "selector": "parameter",
            "format": [
              "camelCase"
            ],
            "prefix": [
              "_"
            ],
            "filter": {
              "regex": "^_",
              "match": true
            }
          },
          {
            "selector": "method",
            "format": [
              "camelCase"
            ]
          },
          {
            "selector": "enum",
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": "enumMember",
            "format": [
              "UPPER_CASE"
            ]
          },
          {
            "selector": "class",
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": "interface",
            "format": [
              "PascalCase"
            ],
            "prefix": [
              "I"
            ]
          },
          {
            "selector": "typeAlias",
            "format": [
              "PascalCase"
            ],
            "prefix": [
              "T"
            ]
          },
          {
            "selector": "typeParameter",
            "format": [
              "PascalCase"
            ],
            "prefix": [
              "T"
            ]
          }
        ],
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "array-element-newline": [
          "error",
          "consistent"
        ],
        "indent": [
          "error",
          2,
          {
            "SwitchCase": 1,
            "VariableDeclarator": 1,
            "outerIIFEBody": 1,
            "MemberExpression": 1,
            "FunctionDeclaration": {
              "parameters": 1,
              "body": 1
            },
            "FunctionExpression": {
              "parameters": 1,
              "body": 1
            },
            "ArrayExpression": 1,
            "ObjectExpression": 1,
            "ignoredNodes": [
              "TemplateLiteral"
            ],
            "ignoreComments": false
          }
        ],
        "comma-dangle": [
          "error",
          {
            "arrays": "always-multiline",
            "objects": "always-multiline",
            "imports": "always-multiline",
            "exports": "always-multiline",
            "functions": "never"
          }
        ],
        "object-property-newline": [
          "error",
          {
            "allowAllPropertiesOnSameLine": false
          }
        ],
        "object-curly-newline": [
          "error",
          {
            "ObjectExpression": {
              "multiline": true,
              "minProperties": 1
            },
            "ObjectPattern": {
              "multiline": true,
              "minProperties": 1
            },
            "ExportDeclaration": {
              "multiline": true,
              "minProperties": 1
            }
          }
        ],
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1,
            "maxBOF": 0,
            "maxEOF": 1
          }
        ],
        "eqeqeq": [
          "error",
          "always",
          {
            "null": "ignore"
          }
        ],
        "no-trailing-spaces": [
          "error"
        ],
        "curly": [
          "error",
          "all"
        ],
        "brace-style": [
          "error",
          "1tbs",
          {
            "allowSingleLine": false
          }
        ],
        "semi": [
          "error",
          "always"
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended",
        "plugin:@angular-eslint/template/accessibility"
      ],
      "rules": {
        "@angular-eslint/template/click-events-have-key-events": "off",
        "@angular-eslint/template/interactive-supports-focus": "off"
      }
    }
  ]
}
