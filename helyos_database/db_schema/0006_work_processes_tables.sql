-- Name: work_processes; Type: TABLE; Schema: public; Owner: -

CREATE TABLE IF NOT EXISTS public.work_processes (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  mission_queue_id BIGINT DEFAULT NULL,
  run_order INT DEFAULT 0,
  yard_id BIGINT REFERENCES public.yards(id) ON DELETE CASCADE,
  yard_uid CHARACTER VARYING,
  work_process_type_id INT,
  status CHARACTER VARYING DEFAULT 'draft',
  work_process_type_name CHARACTER VARYING NOT NULL,
  description CHARACTER VARYING,
  data JSONB,
  tools_uuids TEXT[],
  agent_ids INTEGER[] NOT NULL DEFAULT '{}',
  agent_uuids TEXT[],
  created_at TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT NOW(),
  modified_at TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT NOW(),
  started_at TIMESTAMP(6) WITHOUT TIME ZONE,
  ended_at TIMESTAMP(6) WITHOUT TIME ZONE,
  sched_start_at TIMESTAMP(6) WITHOUT TIME ZONE,
  sched_end_at TIMESTAMP(6) WITHOUT TIME ZONE,
  wait_free_agent BOOLEAN DEFAULT TRUE,
  process_type CHARACTER VARYING,
  operation_types_required CHARACTER VARYING[] DEFAULT '{}',
  on_assignment_failure CHARACTER VARYING DEFAULT 'DEFAULT' CHECK (on_assignment_failure IN ('DEFAULT', 'FAIL_MISSION', 'CONTINUE_MISSION', 'RELEASE_FAILED')),
  fallback_mission CHARACTER VARYING DEFAULT 'DEFAULT',
  CONSTRAINT status_check CHECK (
    status IS NULL OR
    status IN (
      'draft',
      'dispatched',
      'preparing resources',
      'calculating',
      'executing',
      'assignments_completed',
      'succeeded',
      'assignment_failed',
      'planning_failed',
      'failed',
      'canceling',
      'canceled'
    )
  ), 
  CONSTRAINT yard_id_or_yard_uid_not_null CHECK (
    yard_id IS NOT NULL OR yard_uid IS NOT NULL
  )
);

COMMENT ON COLUMN work_processes.yard_id IS '@ db id of yard where happens the work process';
COMMENT ON COLUMN work_processes.yard_uid IS '@ unique identifier of yard where happens the work process; the redundancy with yard_id is necessary to improve usability of graphQL requests';
COMMENT ON COLUMN work_processes.status IS '@ status of this work process: "created", "planning", "executing", "succeeded"';
COMMENT ON COLUMN work_processes.description IS '@ object with request data';
COMMENT ON COLUMN work_processes.data IS '@ object with request data';
COMMENT ON COLUMN work_processes.agent_ids IS '@ array of agent ids participating within work process; the redundancy with agent_uuids is necessary to improve usability of graphQL requests';
COMMENT ON COLUMN work_processes.agent_uuids IS '@ array of agent uuids participating within work process; the redundancy with agent_ids is necessary to improve usability of graphQL requests';
COMMENT ON COLUMN work_processes.sched_start_at IS '@ specify when the work process will be processed: path planning, agent reservation, etc.';
COMMENT ON COLUMN work_processes.on_assignment_failure IS '@ specify if the mission should FAIL and immediately release all agents, or should CONTINUE and release the agents in the end of the process.';

-- process_type is deprecated, it will be substituted by work_process_type_name
-- description is deprecated, it will be substituted by data

CREATE OR REPLACE FUNCTION public.trigger_set_timestamp_work_processes()
RETURNS TRIGGER AS
$BODY$
BEGIN
  NEW.modified_at = NOW();
  RETURN NEW;
END;
$BODY$ 
LANGUAGE plpgsql;

CREATE TRIGGER set_timestamp_work_processes
BEFORE UPDATE ON public.work_processes
FOR EACH ROW
EXECUTE FUNCTION public.trigger_set_timestamp_work_processes();

-- Breakdown work process in many services
-- Name: work_processe_type; Type: TABLE; Schema: public; Owner: -

CREATE TABLE IF NOT EXISTS public.work_process_type (
  id BIGSERIAL PRIMARY KEY,
  name CHARACTER VARYING,
  description CHARACTER VARYING,
  num_max_agents INT,
  dispatch_order JSONB,
  settings JSONB,
  extra_params JSONB,
  on_assignment_failure CHARACTER VARYING DEFAULT 'FAIL_MISSION' CHECK (on_assignment_failure IN ('FAIL_MISSION', 'CONTINUE_MISSION', 'RELEASE_FAILED')),
  fallback_mission CHARACTER VARYING DEFAULT '',
  UNIQUE(name)
);

-- extra_params is deprecated

CREATE TABLE IF NOT EXISTS public.work_process_service_plan (
  id BIGSERIAL PRIMARY KEY,
  work_process_type_id BIGINT REFERENCES public.work_process_type(id) ON DELETE CASCADE,
  step CHARACTER VARYING,
  request_order INT,
  agent INT,
  service_type CHARACTER VARYING,
  service_config JSONB,
  depends_on_steps JSONB,
  is_result_assignment BOOLEAN,
  wait_dependencies_assignments BOOLEAN DEFAULT TRUE,
  CONSTRAINT unique_step_work_process_type UNIQUE (step, work_process_type_id)
);

COMMENT ON COLUMN work_process_service_plan.step IS '@description Label ("A", "B"..."Z") of the calculation step. Each step represents one request.';
COMMENT ON COLUMN work_process_service_plan.request_order IS '@description Order of the requests sent to external service.';
COMMENT ON COLUMN work_process_service_plan.is_result_assignment IS '@description If request result should be dispatched as an assignment.';
COMMENT ON COLUMN work_process_service_plan.service_config IS '@description It overrides default config of external service.';
COMMENT ON COLUMN work_processes.on_assignment_failure IS '@ specify if the mission should FAIL and immediately release all agents, or should CONTINUE and release the agents in the end of the process.';

-- CREATE INDEX index_assignments_on_work_process_id ON public.assignments USING btree (work_process_id);

ALTER TABLE ONLY public.work_processes
  ADD CONSTRAINT fk_wp_mission_queue FOREIGN KEY (mission_queue_id) REFERENCES public.mission_queue(id)
  ON DELETE SET NULL;

-- ALTER TABLE ONLY public.assignments
-- ADD CONSTRAINT fk_rails_79461edfd8 FOREIGN KEY (work_process_id) REFERENCES public.work_processes(id);