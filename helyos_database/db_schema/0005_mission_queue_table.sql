-- Name: work_processes; Type: TABLE; Schema: public; Owner: -

CREATE TABLE IF NOT EXISTS public.mission_queue (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name CHARACTER VARYING,
  status CHARACTER VARYING,
  description CHARACTER VARYING,
  created_at TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT NOW(),
  modified_at TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT NOW(),
  started_at TIMESTAMP(6) WITHOUT TIME ZONE,
  ended_at TIMESTAMP(6) WITHOUT TIME ZONE,
  sched_start_at TIMESTAMP(6) WITHOUT TIME ZONE,
  sched_end_at TIMESTAMP(6) WITHOUT TIME ZONE,
  stop_on_failure BOOLEAN DEFAULT FALSE
);

COMMENT ON COLUMN mission_queue.status IS '@ status of this work process: "stop", "stopped", "failed", "run", "running", "ended", "ended-with-failures"';
COMMENT ON COLUMN mission_queue.description IS '@ description';
COMMENT ON COLUMN mission_queue.sched_start_at IS '@ specify when the work process will be processed: path planning, agent reservation, etc.';
COMMENT ON COLUMN mission_queue.stop_on_failure IS '@ specify if the run list should stop or continue when one work process fails';

-- process_type is deprecated, it will be substituted by work_process_type_name
-- description is deprecated, it will be substituted by data

CREATE OR REPLACE FUNCTION public.trigger_set_timestamp_mission_queue()
RETURNS TRIGGER AS
$BODY$
BEGIN
  NEW.modified_at = NOW();
  RETURN NEW;
END;
$BODY$ 
LANGUAGE plpgsql;

CREATE TRIGGER set_timestamp_mission_queue
BEFORE UPDATE ON public.mission_queue
FOR EACH ROW
EXECUTE PROCEDURE public.trigger_set_timestamp_mission_queue();