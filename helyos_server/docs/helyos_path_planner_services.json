{
  "openapi": "3.0.0",
  "info": {
    "title": "Plan helyOS Service API",
    "version": "1.0",
    "license": {
      "name": "MIT"
    },
    "description": "HelyOS communicates (makes requests) to path planners using this API. External services must follow these definitions to be compatible with helyOS.\n\n## Services\n* plan_job :  it generates assignments. The assigments must be compatible with the Agent.\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/plan_job": {
      "post": {
        "summary": "Request calculation job",
        "operationId": "post-assignment",
        "responses": {
          "201": {
            "description": "For time demanding calculations, the output should be just a token that will be used later to poll the final result.\nFor quick calculations (few seconds), the service can return the result as described in the response of /plan_job/{request_id}.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "request_id"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "request_id": "asdfghjkl0"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a job to transform a mission request to agent assignments.\nThe `context` contains the current state of map and agents. Results from previous microservices are found in `context.dependencies`.\n\nThe specific work process information (mission) goes in `request`. No data structure is pre-defined for this object. \n\nFor time demanding calculations, the response can be a request number id. helyOS will periodically poll the results using this number until the calculation is ready.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": {
                    "type": "object",
                    "description": "This object is originated in the user interface."
                  },
                  "config": {
                    "type": "object"
                  },
                  "context": {
                    "$ref": "#/components/schemas/HelyOSContext"
                  }
                },
                "required": [
                  "request",
                  "context"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request": {},
                    "context": {
                      "agents": [
                        {
                          "id": "string",
                          "name": "string",
                          "sensors": {},
                          "geometry": {}
                        }
                      ],
                      "map": {
                        "origin": [
                          " [-26216.225821195887, -78610.13436118636]",
                          " [-26216.225821195887, -78610.13436118636]"
                        ],
                        "map_objects": [
                          {
                            "type": "\"obstacle\"",
                            "data": [
                              {
                                "top": 0,
                                "bottom": 0,
                                "points": [
                                  [
                                    " [-26216.225821195887, -78610.13436118636]",
                                    " [-26216.225821195887, -78610.13436118636]"
                                  ]
                                ]
                              }
                            ],
                            "geometry_type": "\"polygon\""
                          }
                        ]
                      },
                      "active_plans": [
                        null
                      ],
                      "dependencies": [
                        {
                          "UID": "string",
                          "output": {}
                        }
                      ],
                      "targets": [
                        {
                          "id": 0,
                          "x": 0,
                          "y": 0,
                          "orientations": [
                            0
                          ],
                          "anchor": "string"
                        }
                      ]
                    },
                    "config": {}
                  }
                }
              }
            }
          },
          "description": "Request for path planning."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "user_id"
          }
        ]
      },
      "parameters": []
    },
    "/plan_job/{request_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "request_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get requested job results",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "example": "\"ready\"",
                      "enum": [
                        "failed",
                        "ready",
                        "pending",
                        "canceled"
                      ]
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agent_id": {
                            "type": "string"
                          },
                          "result": {
                            "type": "object"
                          }
                        },
                        "required": [
                          "agent_id",
                          "result"
                        ]
                      }
                    },
                    "dispatch_order": {
                      "type": "array",
                      "description": "[[0],[1],[2,3],...] values are results indexes.e.g. 1st [0], 2nd [1], 3rd [2,3]",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "request_id",
                    "status"
                  ]
                },
                "examples": {
                  "Example with pending calculation": {
                    "value": {
                      "status": "pending"
                    }
                  },
                  "Example with failing calculation": {
                    "value": {
                      "status": "failed",
                      "results": []
                    }
                  },
                  "Example with calculation ready": {
                    "value": {
                      "request_id": "12345",
                      "status": "ready",
                      "results": [
                        {
                          "agent_id": "12",
                          "assignment": {
                            "path": [
                              [
                                1,
                                2
                              ],
                              [
                                1,
                                3
                              ],
                              [
                                2,
                                4
                              ],
                              [
                                3,
                                5
                              ],
                              [
                                3,
                                6
                              ]
                            ]
                          }
                        }
                      ],
                      "dispatch_order": [
                        [
                          0
                        ]
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "operationId": "get-assignment-id",
        "description": "Get information about a specific assignment selected by the request id.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "user_id"
          }
        ]
      },
      "delete": {
        "summary": "Cancel request for trajectory calculation",
        "operationId": "delete-trajectory-user_id-request_id",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "user_id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "user_id"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AgentModel": {
        "title": "AgentModel",
        "type": "object",
        "description": "Agent Model",
        "properties": {
          "id": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sensors": {
            "type": "object"
          },
          "pose": {
            "$ref": "#/components/schemas/PoseModel"
          },
          "geometry": {
            "type": "object"
          }
        }
      },
      "MapModel": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "title": "",
        "properties": {
          "id": {
            "type": "string",
            "description": "map or yard id."
          },
          "origin": {
            "type": "object",
            "description": "Origin (0,0) of local helyOS map in WGS84 long/lat",
            "required": [
              "long",
              "lat"
            ],
            "properties": {
              "long": {
                "type": "number",
                "example": 13.735888504238131
              },
              "lat": {
                "type": "number",
                "example": 51.02717609817974
              },
              "alt": {
                "type": "number"
              }
            }
          },
          "map_objects": {
            "type": "array",
            "description": "map objects.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "data_format": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "metadata": {
                  "type": "object"
                }
              }
            }
          }
        },
        "required": [
          "origin",
          "map_objects"
        ]
      },
      "PoseModel": {
        "title": "PoseModel",
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "description": "[mm]"
          },
          "y": {
            "type": "number",
            "description": "[mm]"
          },
          "orientations": {
            "type": "array",
            "items": {
              "type": "array",
              "minItems": 1,
              "description": "[mrad]",
              "items": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "x",
          "y",
          "orientations"
        ]
      },
      "SensorModel": {
        "$ref": "./models/sensor.v1.json",
        "x-examples": {
          "example-number": {
            "title": "Sensor 0",
            "type": "number",
            "description": "Our Sensor Zero",
            "unit": "%",
            "min": 0,
            "max": 100,
            "value": 55
          },
          "example-string": {
            "title": "Sensor 0",
            "type": "string",
            "description": "Our Sensor Zero",
            "unit": "",
            "minLength": 0,
            "maxLength": 100,
            "value": "Hello World",
            "key": 2343223
          }
        },
        "title": ""
      },
      "AnyFormat": {
        "title": "AnyFormat",
        "type": "object",
        "description": "Arbitrary data format",
        "properties": {
          "data": {
            "type": "object",
            "description": "arbitrary data structure."
          }
        }
      },
      "HelyOSContext": {
        "title": "HelyOSContext",
        "type": "object",
        "properties": {
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentModel"
            }
          },
          "map": {
            "$ref": "#/components/schemas/MapModel"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "UID": {
                  "type": "string"
                },
                "step": {
                  "type": "string"
                },
                "output": {
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "x-examples": {
          "example-1": {
            "agents": [
              {
                "id": "string",
                "uuid": "string",
                "name": "string",
                "sensors": {},
                "pose": {
                  "x": 0,
                  "y": 0,
                  "orientations": [
                    [
                      0
                    ]
                  ]
                },
                "geometry": {}
              }
            ],
            "map": {
              "id": "string",
              "origin": {
                "long": 13.735888504238131,
                "lat": 51.02717609817974,
                "alt": 0
              },
              "map_objects": [
                {
                  "id": 0,
                  "type": "string",
                  "data_format": "string",
                  "data": {},
                  "metadata": {}
                }
              ]
            },
            "dependencies": [
              {
                "UID": "string",
                "step": "string",
                "output": {
                  "": "string"
                }
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "x-api-key": {
        "name": "x-api-key",
        "type": "apiKey",
        "in": "header"
      }
    },
    "responses": {
      "retrieve-request": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "request_id": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "result": {
                  "type": [
                    "null",
                    "object"
                  ]
                },
                "results": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "request_id",
                "status"
              ]
            }
          }
        },
        "headers": {
          "header-0": {
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}